import numpy as np
import rootfinding as rf

# for i in range(100):
#     A = np.random.randint(1, 7)
#     B = np.random.randint(1, 7)
#     if A + B == k:
#         running_total = running_total + 1
#     print(A + B, A, B)
#     # print(running_total)
# print(running_total / 100)

##############################################################
# DICE ROLLING
##############################################################


def diceprob(dice_total, no_rolls):
    running_total = 0
    for i in range(no_rolls):
        A = np.random.randint(1, 7)
        B = np.random.randint(1, 7)
        if A + B == dice_total:
            running_total = running_total + 1
    probability = running_total / no_rolls
    return probability


np.random.seed(1)

for k in range(2, 13):
    print(k, diceprob(k, 100))


##############################################################
# ROOT FINDING
##############################################################


# def f(m):
#     return m ** 2.5 - 25
#
#
# x, iters = rf.secant(f)
#
# print('Solution: {}'.format(x))
# print('Number of iterations: {}'.format(iters))
# print('Check: f({:.8f}) = {:.8f}'.format(x, f(x)))
